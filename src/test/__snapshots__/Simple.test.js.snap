// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`단순한 컴포넌트의 테스트 Home이 렌더링 된다. 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="elem1"
>
          <div
                    className="container"
          >
                    <div
                              className="title"
                    >
                              LALA FRIENDS are doing something FUN!
                    </div>
                    <div
                              className="sub"
                    >
                              Do you have any idea? Do you have any inconvenience?
                    </div>
                    <div
                              className="sub"
                    >
                              Let's talk together.
                    </div>
                    <div
                              className="sub"
                    >
                              So... let's get started.
                    </div>
          </div>
</div>,
        <div
          className="elem2"
/>,
      ],
      "className": "home",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
>
            <div
                        className="title"
            >
                        LALA FRIENDS are doing something FUN!
            </div>
            <div
                        className="sub"
            >
                        Do you have any idea? Do you have any inconvenience?
            </div>
            <div
                        className="sub"
            >
                        Let's talk together.
            </div>
            <div
                        className="sub"
            >
                        So... let's get started.
            </div>
</div>,
          "className": "elem1",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="title"
>
                LALA FRIENDS are doing something FUN!
</div>,
              <div
                className="sub"
>
                Do you have any idea? Do you have any inconvenience?
</div>,
              <div
                className="sub"
>
                Let's talk together.
</div>,
              <div
                className="sub"
>
                So... let's get started.
</div>,
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "LALA FRIENDS are doing something FUN!",
                "className": "title",
              },
              "ref": null,
              "rendered": "LALA FRIENDS are doing something FUN!",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Do you have any idea? Do you have any inconvenience?",
                "className": "sub",
              },
              "ref": null,
              "rendered": "Do you have any idea? Do you have any inconvenience?",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Let's talk together.",
                "className": "sub",
              },
              "ref": null,
              "rendered": "Let's talk together.",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "So... let's get started.",
                "className": "sub",
              },
              "ref": null,
              "rendered": "So... let's get started.",
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "elem2",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="elem1"
>
            <div
                        className="container"
            >
                        <div
                                    className="title"
                        >
                                    LALA FRIENDS are doing something FUN!
                        </div>
                        <div
                                    className="sub"
                        >
                                    Do you have any idea? Do you have any inconvenience?
                        </div>
                        <div
                                    className="sub"
                        >
                                    Let's talk together.
                        </div>
                        <div
                                    className="sub"
                        >
                                    So... let's get started.
                        </div>
            </div>
</div>,
          <div
            className="elem2"
/>,
        ],
        "className": "home",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="container"
>
              <div
                            className="title"
              >
                            LALA FRIENDS are doing something FUN!
              </div>
              <div
                            className="sub"
              >
                            Do you have any idea? Do you have any inconvenience?
              </div>
              <div
                            className="sub"
              >
                            Let's talk together.
              </div>
              <div
                            className="sub"
              >
                            So... let's get started.
              </div>
</div>,
            "className": "elem1",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="title"
>
                  LALA FRIENDS are doing something FUN!
</div>,
                <div
                  className="sub"
>
                  Do you have any idea? Do you have any inconvenience?
</div>,
                <div
                  className="sub"
>
                  Let's talk together.
</div>,
                <div
                  className="sub"
>
                  So... let's get started.
</div>,
              ],
              "className": "container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "LALA FRIENDS are doing something FUN!",
                  "className": "title",
                },
                "ref": null,
                "rendered": "LALA FRIENDS are doing something FUN!",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Do you have any idea? Do you have any inconvenience?",
                  "className": "sub",
                },
                "ref": null,
                "rendered": "Do you have any idea? Do you have any inconvenience?",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Let's talk together.",
                  "className": "sub",
                },
                "ref": null,
                "rendered": "Let's talk together.",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "So... let's get started.",
                  "className": "sub",
                },
                "ref": null,
                "rendered": "So... let's get started.",
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "elem2",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`단순한 컴포넌트의 테스트 NoMatch가 렌더링 된다. 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NoMatch />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "NoMatch",
    },
    "ref": null,
    "rendered": "NoMatch",
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "NoMatch",
      },
      "ref": null,
      "rendered": "NoMatch",
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
